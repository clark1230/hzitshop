<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
        <context:component-scan base-package="com.hzit.hzitshop.controller"/>
        <!--配置消息转换器-->
        <mvc:annotation-driven>
                <!--配置消息转换器-->
                <mvc:message-converters>
                        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                                <property name="supportedMediaTypes" value="text/html;charset=utf-8"></property>
                        </bean>
                        <!-- 处理responseBody 里面日期类型 -->
                        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                                <property name="objectMapper">
                                        <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                                                <property name="dateFormat">
                                                        <bean class="java.text.SimpleDateFormat">
                                                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                                                        </bean>
                                                </property>
                                        </bean>
                                </property>
                        </bean>
                </mvc:message-converters>
        </mvc:annotation-driven>
        <!--配置视图解析器-->
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <!--视图的前缀-->
                <property name="prefix" value="/WEB-INF/jsp/"></property>
                <!--视图的后缀-->
                <property name="suffix" value=".jsp"></property>
        </bean>
        <!-- 配置freeMarker视图解析器 -->
        <bean id="viewResolverFtl" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
                <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
                <property name="contentType" value="text/html; charset=utf-8"/>
                <property name="cache" value="true" />
                <property name="suffix" value=".ftl" />
                <property name="order" value="0"/>
        </bean>
        <!-- ftl参数配置 -->
       <!-- <bean id="freemarkerConfiguration"
              class="org.springframework.beans.factory.config.PropertiesFactoryBean">
                <property name="location" value="/WEB-INF/freemarker.properties" />
        </bean>-->
        <!-- 配置freeMarker的模板路径 -->
        <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
                <property name="templateLoaderPath">
                        <value>/WEB-INF/freemarker/</value>
                </property>
                <property name="freemarkerVariables">
                        <map>
                                <!--<entry key="xml_escape" value-ref="fmXmlEscape" />-->
                        </map>
                </property>
                <property name="defaultEncoding">
                        <value>utf-8</value>
                </property>
                <property name="freemarkerSettings">
                        <props>
                                <prop key="template_update_delay">3600</prop>
                        </props>
                </property>
        </bean>
        <bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
                <!-- 必须改为true，即使用cglib方式为Action创建代理对象。默认值为false，使用JDK创建代理对象，会造成问题 -->
                <property name="proxyTargetClass" value="true"></property>
        </bean>

        <!-- 使用shiro框架提供的切面类，用于创建代理对象 -->
        <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>



        <!-- springmvc提供的简单异常处理器 -->
        <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
                <!-- 定义默认的异常处理页面 -->
                <property name="defaultErrorView" value="403"/>
                <!-- 定义异常处理页面用来获取异常信息的变量名，也可不定义，默认名为exception -->
                <property name="exceptionAttribute" value="ex"/>
                <!-- 定义需要特殊处理的异常，这是重要点 -->
                <property name="exceptionMappings">
                        <props>
                                <prop key="ssm.exception.CustomException">403</prop>
                        </props>
                        <!-- 还可以定义其他的自定义异常 -->
                </property>
        </bean>
</beans>