<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hzit.hzitshop.mapper.RoleMapper">

    <sql id="tbRoleBaseColumnSql">
        role_id,
        role_name,
        description,
        create_time,
        create_by,
        update_time,
        update_by,
        is_lock
    </sql>

    <sql id="tbRoleBaseWhereSql">
        <if test="map!=null">
            <where>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.roleId)">
                    role_id = #{map.roleId}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.roleName)">
                    AND role_name = #{map.roleName}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.description)">
                    AND description = #{map.description}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.createTime)">
                    AND create_time = #{map.createTime}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.createBy)">
                    AND create_by = #{map.createBy}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.updateTime)">
                    AND update_time = #{map.updateTime}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.updateBy)">
                    AND update_by = #{map.updateBy}
                </if>
                <if test="@org.apache.commons.lang3.StringUtils@isNotEmpty(map.isLock)">
                    AND is_lock = #{map.isLock}
                </if>
            </where>
        </if>
    </sql>

    <insert id="insertTbRole" parameterType="com.hzit.hzitshop.entity.Role">
        INSERT INTO tb_role(
        <include refid="tbRoleBaseColumnSql"/>
        )VALUES(
            #{roleId},
            #{roleName},
            #{description},
            #{createTime},
            #{createBy},
            #{updateTime},
            #{updateBy},
            #{isLock}
        )
    </insert>

    
    <delete id="deleteTbRoleByRoleId" parameterType="Integer">
        DELETE FROM tb_role WHERE role_id = #{roleId}
    </delete>

    <!--批量删除数据-->
    <delete id="deleteByIds" parameterType="java.lang.String">
        DELETE from tb_role
        <where>
            role_id in
            <foreach  collection="array" open="(" separator="," close=")" item="id">
                #{id}
            </foreach>
        </where>
    </delete>
    <!--角色的禁用与启用-->
    <update id="lockRole" parameterType="map">
        UPDATE  tb_role
        set is_lock = #{map.isLock} where role_id=#{map.roleId}
    </update>
    <update id="updateTbRole" parameterType="com.hzit.hzitshop.entity.Role">
        UPDATE tb_role
        <set>
            role_name = #{roleName} ,
            description = #{description} ,
            update_time = #{updateTime} ,
            update_by = #{updateBy} ,
            is_lock = #{isLock}
        </set>
        WHERE role_id = #{roleId}
    </update>

    <select id="searchTbRoleByParams" parameterType="map" resultMap="tbRoleMap">
        SELECT
        <include refid="tbRoleBaseColumnSql"/>
        FROM tb_role
        <include refid="tbRoleBaseWhereSql"/>
        limit #{map.offset},#{map.limit}
    </select>
    <!--获取总记录数-->
    <select id="getTotal" resultType="int" parameterType="map">
        select count(*) from tb_role
        <where>

        </where>
    </select>

    <!--根据roleId查询一条记录-->
    <select id="selectOne" resultMap="tbRoleMap" parameterType="int">
        SELECT
        <include refid="tbRoleBaseColumnSql"/>
        FROM tb_role
        WHERE
        role_id=#{roleId}
    </select>
    <resultMap type="com.hzit.hzitshop.entity.Role" id="tbRoleMap">
        <id column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="description" property="description"/>
        <result column="create_time" property="createTime"/>
        <result column="create_by" property="createBy"/>
        <result column="update_time" property="updateTime"/>
        <result column="update_by" property="updateBy"/>
        <result column="is_lock" property="isLock"/>
    </resultMap>

</mapper>
